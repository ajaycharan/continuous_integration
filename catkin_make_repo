#!/bin/bash
source /var/lib/jenkins/ros_catkin_ws/install_isolated/setup.sh
export PATH=/usr/lib/ccache:$PATH

RUN_TESTS=$1
PACKAGES=${*:2}

mkdir -p $WORKSPACE/devel/include

echo Checking whether we should run the tests...
if $RUN_TESTS; then
  echo "Will first build $PACKAGES and then run tests."
else
  echo "Will only build $PACKAGES and skip tests."
fi

catkin_make clean

# Make sure catkin_simple is built first
catkin_make --pkg catkin_simple

if [ "$PACKAGES" = "" ]  || [ "$PACKAGES" = " " ]; then
    catkin_make
    ret_code=$?
    if [ $ret_code != 0 ]; then
      exit $ret_code
    fi
  else
    catkin_make --pkg $PACKAGES
    ret_code=$?
    if [ $ret_code != 0 ]; then
      exit $ret_code
    fi
fi
if $RUN_TESTS; then
  echo "*** sourcing the devel space"
  source $WORKSPACE/devel/setup.bash
  # Clear out results from the requested packages.
  TEST_RESULTS_FOLDER=$WORKSPACE/build/test_results
  for package in $@
  do
      echo "Clearing test results in $TEST_RESULTS_FOLDER/$package ..."
      rm -rf $TEST_RESULTS_FOLDER/$package
  done

  for PACKAGE in $PACKAGES
  do
    echo "*** Trying to run the tests for package $PACKAGE"
    # catch the output of catkin make and redirect stderr to stdout (2>&1)
    OUTPUT=$(catkin_make run_tests_$PACKAGE 2>&1)
    ret_code=$?
    # Echo the output for parsing by Jenkins
    echo "$OUTPUT"
    # Try to figure out if things failed because there are no unit tests
    # for this package. Search for the error message Make puts out:
    NO_TESTS=$(echo $OUTPUT | grep "No rule to make target")
    if [[ -z $NO_TESTS ]]; then
        # There were tests
        if [ $ret_code != 0 ]; then
            echo "*** Tests for package $PACKAGE failed"
            exit $ret_code
        else
            echo "*** Tests for package $PACKAGE succeeded"
        fi
    else
        echo "*** No tests for package $PACKAGE"
    fi
  done

  # Clear / Create a directory in the workspace where we can store the test results.
  TEST_RESULTS_DEST=$WORKSPACE/test_results/
  rm -rf $TEST_RESULTS_DEST
  mkdir -p $TEST_RESULTS_DEST

  # Copy all test results from the currently build packages to the workspace folder.
  echo "Copying test results from $TEST_RESULTS_FOLDER/$package to $TEST_RESULTS_DEST..."
  cp -r $TEST_RESULTS_FOLDER/* $TEST_RESULTS_DEST/ || true
fi

